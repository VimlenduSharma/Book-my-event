version: "3.9"

x-common-env: &common-env
  ENV_FILE: .env
  PUID: 1000
  PGID: 1000

services:
# ────────────────────────────────  FastAPI  ────────────────────────────────
  api:
    build: .
    image: scheduler-api:latest
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports: ["8000:8000"]
    depends_on: [db, redis, minio]
    networks: [backend]
    restart: unless-stopped
    volumes:
      - ./backend:/app:ro

# ───────────────────────────────  Celery worker  ───────────────────────────
  worker:
    image: scheduler-api:latest
    env_file: .env
    command: celery -A app.core.celery_app worker -l info --concurrency=4
    depends_on: [api, redis, db]
    networks: [backend]
    restart: unless-stopped

# ───────────────────────────────  Celery Beat  ─────────────────────────────
  beat:
    image: scheduler-api:latest
    env_file: .env
    command: celery -A app.core.celery_app beat -l info
    depends_on: [api, redis, db]
    networks: [backend]
    restart: unless-stopped

# ────────────────────────────────  PostgreSQL  ─────────────────────────────
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: scheduler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [backend]
    restart: unless-stopped

# ─────────────────────────────────  Redis  ─────────────────────────────────
  redis:
    image: redis:7
    networks: [backend]
    restart: unless-stopped

# ────────────────────────────────  MinIO  (S3)  ────────────────────────────
  minio:
    image: quay.io/minio/minio:RELEASE.2024-04-18T19-09-19Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console UI
    volumes:
      - minio-data:/data
    networks: [backend]
    restart: unless-stopped

  # One-shot container that creates bucket & exits (idempotent)
  mc:
    image: minio/mc
    depends_on: [minio]
    environment:
      S3_BUCKET: event-brand 
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc alias set local http://minio:9000 minio minio123 &&
        /usr/bin/mc mb -p local/${S3_BUCKET:-event-brand} ||
        true
      "
    networks: [backend]

# ────────────────────────────────  Networks  ───────────────────────────────
networks:
  backend:
    driver: bridge

# ────────────────────────────────  Volumes  ────────────────────────────────
volumes:
  pgdata:
  minio-data:
